{"version":3,"sources":["config.js","CircleButton/CircleButton.js","notes-helpers.js","ApiContext.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["module","exports","API_URL","NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","findNote","notes","arguments","length","undefined","noteId","find","note","id","createContext","folders","addFolder","addNote","deleteNote","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","folder_id","countNotesForFolder","folder_name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","Number","role","onClick","history","goBack","Note","name","push","format","modified","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","assign","note_name","NotePageMain","console","log","onDeleteNote","handleDeleteNote","content","split","para","i","NotefulForm","action","AddFolder","handleSubmit","e","preventDefault","target","value","fetch","config","method","headers","content-type","body","JSON","stringify","then","res","ok","json","Promise","reject","catch","error","NotefulForm_NotefulForm","onSubmit","htmlFor","AddNote","newNote","App","state","fetchAPI","endpoint","data","setState","handleAddFolder","toConsumableArray","handleAddNote","_this2","Fragment","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9b67b296.chunk.js","sourcesContent":["module.exports = {\n  API_URL: 'https://morning-springs-13337.herokuapp.com/',\n};\n","import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","export const findFolder = (folders = [], folderId) =>\n  folders.find((folder) => folder.id === folderId);\n\nexport const findNote = (notes = [], noteId) =>\n  notes.find((note) => note.id === noteId);\n\nexport const getNotesForFolder = (notes = [], folderId) =>\n  !folderId\n    ? notes\n    : notes.filter((note) => note.folder_id === Number(folderId));\n\nexport const countNotesForFolder = (notes = [], folderId) =>\n  notes.filter((note) => note.folder_id === folderId).length;\n","import React from 'react';\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n});\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CircleButton from '../CircleButton/CircleButton';\nimport { countNotesForFolder } from '../notes-helpers';\nimport ApiContext from '../ApiContext';\nimport './NoteListNav.css';\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n  render() {\n    const { folders = [], notes = [] } = this.context;\n    return (\n      <div className=\"NoteListNav\">\n        <ul className=\"NoteListNav__list\">\n          {folders.map((folder) => (\n            <li key={folder.id}>\n              <NavLink\n                className=\"NoteListNav__folder-link\"\n                to={`/folder/${folder.id}`}\n              >\n                <span className=\"NoteListNav__num-notes\">\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.folder_name}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n        <div className=\"NoteListNav__button-wrapper\">\n          <CircleButton\n            tag={Link}\n            to=\"/add-folder\"\n            type=\"button\"\n            className=\"NoteListNav__add-folder-button\"\n          >\n            <FontAwesomeIcon icon=\"plus\" />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nNoteListNav.defaultProps = {\n  folders: [],\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CircleButton from '../CircleButton/CircleButton';\nimport ApiContext from '../ApiContext';\nimport { findNote, findFolder } from '../notes-helpers';\nimport './NotePageNav.css';\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => {},\n    },\n    match: {\n      params: {},\n    },\n  };\n  static contextType = ApiContext;\n  render() {\n    const { notes, folders } = this.context;\n    const { noteId } = this.props.match.params;\n    const note = findNote(notes, Number(noteId)) || {};\n    const folder = findFolder(folders, note.folder_id);\n    return (\n      <div className=\"NotePageNav\">\n        <CircleButton\n          tag=\"button\"\n          role=\"link\"\n          onClick={() => this.props.history.goBack()}\n          className=\"NotePageNav__back-button\"\n        >\n          <FontAwesomeIcon icon=\"chevron-left\" />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className=\"NotePageNav__folder-name\">{folder.folder_name}</h3>\n        )}\n      </div>\n    );\n  }\n}\n\nNotePageNav.defaultProps = {\n  history: {\n    goBack: () => {},\n  },\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Note.css';\nimport ApiContext from '../ApiContext';\n\nexport default class Note extends React.Component {\n  static contextType = ApiContext;\n  render() {\n    const { deleteNote } = this.context;\n\n    return (\n      <div className=\"Note\">\n        <h2 className=\"Note__title\">\n          <Link to={`/note/${this.props.id}`}>{this.props.name}</Link>\n        </h2>\n        <button\n          className=\"Note__delete\"\n          type=\"button\"\n          onClick={() => {\n            this.props.history.push('/');\n            deleteNote(this.props.id);\n          }}\n        >\n          <FontAwesomeIcon icon=\"trash-alt\" /> remove\n        </button>\n        <div className=\"Note__dates\">\n          <div className=\"Note__dates-modified\">\n            Modified{' '}\n            <span className=\"Date\">\n              {format(this.props.modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* Note.defaultProps = {\n\thistory: {\n\t\tgoBack: () => {\n\t\t\t'/';\n\t\t},\n\t},\n}; */\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Note from '../Note/Note';\nimport CircleButton from '../CircleButton/CircleButton';\nimport { getNotesForFolder } from '../notes-helpers';\nimport ApiContext from '../ApiContext';\nimport './NoteListMain.css';\n\nexport default class NoteListMain extends React.Component {\n  static contextType = ApiContext;\n  render() {\n    const { folderId } = this.props.match.params;\n    const { notes = [] } = this.context;\n    const notesForFolder = getNotesForFolder(notes, folderId);\n    return (\n      <section className=\"NoteListMain\">\n        <ul>\n          {notesForFolder.map((note) => (\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.note_name}\n                modified={note.modified}\n                {...this.props}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"NoteListMain__button-container\">\n          <CircleButton\n            tag={Link}\n            to=\"/add-note\"\n            type=\"button\"\n            className=\"NoteListMain__add-note-button\"\n          >\n            <FontAwesomeIcon icon=\"plus\" />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport Note from '../Note/Note';\nimport ApiContext from '../ApiContext';\nimport { findNote } from '../notes-helpers';\nimport './NotePageMain.css';\n\nexport default class NotePageMain extends React.Component {\n  static contextType = ApiContext;\n  render() {\n    const { notes } = this.context;\n    const { noteId } = this.props.match.params;\n    const note = findNote(notes, Number(noteId));\n    console.log(note);\n    return (\n      <section className=\"NotePageMain\">\n        <Note\n          id={note.id}\n          name={note.note_name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n          {...this.props}\n        />\n        <div className=\"NotePageMain__content\">\n          {note.content.split(/\\n \\r|\\n/).map((para, i) => (\n            <p key={i}>{para}</p>\n          ))}\n        </div>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport './NotefulForm.css';\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props;\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action=\"#\"\n      {...otherProps}\n    />\n  );\n}\n","import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './AddFolder.css';\n\nexport default class AddFolder extends Component {\n  static defaultProps = {\n    history: {\n      push: () => {},\n    },\n  };\n  static contextType = ApiContext;\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const folder = {\n      folder_name: e.target['folder-name'].value,\n    };\n    fetch(`${config.API_URL}folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(folder),\n    })\n      .then((res) => {\n        if (!res.ok) return res.json().then((e) => Promise.reject(e));\n        return res.json();\n      })\n      .then((folder) => {\n        this.context.addFolder(folder);\n        this.props.history.push(`/`);\n      })\n      .catch((error) => {\n        console.error({ error });\n      });\n  };\n\n  render() {\n    return (\n      <section className=\"AddFolder\">\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className=\"field\">\n            <label htmlFor=\"folder-name-input\">Name</label>\n            <input type=\"text\" id=\"folder-name-input\" name=\"folder-name\" />\n          </div>\n          <div className=\"buttons\">\n            <button type=\"submit\">Add folder</button>\n          </div>\n        </NotefulForm>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './AddNote.css';\n\nexport default class AddNote extends Component {\n  static contextType = ApiContext;\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newNote = {\n      note_name: e.target['note-name'].value,\n      content: e.target['note-content'].value,\n      folder_id: e.target['note-folder-id'].value,\n    };\n    fetch(`${config.API_URL}notes`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then((res) => {\n        if (!res.ok) return res.json().then((e) => Promise.reject(e));\n        return res.json();\n      })\n      .then((note) => {\n        this.context.addNote(note);\n        this.props.history.push(`/`);\n      })\n      .catch((error) => {\n        console.error({ error });\n      });\n  };\n\n  render() {\n    const { folders } = this.context;\n    return (\n      <section className=\"AddNote\">\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className=\"field\">\n            <label htmlFor=\"note-name-input\">Name</label>\n            <input type=\"text\" id=\"note-name-input\" name=\"note-name\" />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"note-content-input\">Content</label>\n            <textarea id=\"note-content-input\" name=\"note-content\" />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"note-folder-select\">Folder</label>\n            <select id=\"note-folder-select\" name=\"note-folder-id\">\n              <option value={null}>...</option>\n              {folders.map((folder) => (\n                <option key={folder.id} value={folder.id}>\n                  {folder.folder_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"buttons\">\n            <button type=\"submit\">Add note</button>\n          </div>\n        </NotefulForm>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport { API_URL } from '../config';\nimport ApiContext from '../ApiContext';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  fetchAPI = (endpoint) => {\n    return fetch(`${API_URL}${endpoint}`)\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then((data) => {\n        return data;\n      });\n  };\n\n  deleteNote = (noteId) => {\n    return fetch(`${API_URL}notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n      },\n    }).then(() => {\n      const notes = this.state.notes.filter((note) => {\n        return note.id !== noteId;\n      });\n      this.setState({\n        notes: notes,\n      });\n    });\n  };\n\n  handleAddFolder = (folder) => {\n    this.setState({ folders: [...this.state.folders, folder] });\n  };\n  handleAddNote = (note) => {\n    this.setState({ notes: [...this.state.notes, note] });\n  };\n\n  componentDidMount() {\n    this.fetchAPI('notes').then((res) => {\n      this.setState({\n        notes: res,\n      });\n    });\n\n    this.fetchAPI('folders').then((res) => {\n      this.setState({\n        folders: res,\n      });\n    });\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map((path) => (\n          <Route exact key={path} path={path} component={NoteListNav} />\n        ))}\n        <Route path=\"/note/:noteId\" component={NotePageNav} />\n        <Route path=\"/add-folder\" component={NotePageNav} />\n        <Route path=\"/add-note\" component={NotePageNav} />\n      </>\n    );\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map((path) => (\n          <Route exact key={path} path={path} component={NoteListMain} />\n        ))}\n        <Route path=\"/note/:noteId\" component={NotePageMain} />\n        <Route path=\"/add-folder\" component={AddFolder} />\n        <Route path=\"/add-note\" component={AddNote} />\n      </>\n    );\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      addFolder: this.handleAddFolder,\n      addNote: this.handleAddNote,\n      deleteNote: this.deleteNote,\n    };\n    return (\n      <ApiContext.Provider value={value}>\n        <div className=\"App\">\n          <nav className=\"App__nav\">\n            {this.state.notes.length > 0 && this.state.folders.length > 0\n              ? this.renderNavRoutes()\n              : 'Loading...'}\n          </nav>\n          <header className=\"App__header\">\n            <h1>\n              <Link to=\"/\">Noteful</Link>{' '}\n              <FontAwesomeIcon icon=\"check-double\" />\n            </h1>\n          </header>\n          <main className=\"App__main\">\n            {this.state.notes.length > 0 && this.state.folders.length > 0\n              ? this.renderMainRoutes()\n              : 'Loading'}\n          </main>\n        </div>\n      </ApiContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}